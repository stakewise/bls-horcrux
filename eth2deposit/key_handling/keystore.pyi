from eth2deposit.utils.constants import UNICODE_CONTROL_CHARS as UNICODE_CONTROL_CHARS
from eth2deposit.utils.crypto import AES_128_CTR as AES_128_CTR, PBKDF2 as PBKDF2, SHA256 as SHA256, scrypt as scrypt
from typing import Any, Dict, Union

hexdigits: Any

def encode_bytes(obj: Union[str, Dict[str, Any]]) -> Union[bytes, str, Dict[str, Any]]: ...

class BytesDataclass:
    def __post_init__(self) -> None: ...
    def as_json(self) -> str: ...

class KeystoreModule(BytesDataclass):
    function: str = ...
    params: Dict[str, Any] = ...
    message: bytes = ...
    def __init__(self, function: Any, params: Any, message: Any) -> None: ...

class KeystoreCrypto(BytesDataclass):
    kdf: KeystoreModule = ...
    checksum: KeystoreModule = ...
    cipher: KeystoreModule = ...
    @classmethod
    def from_json(cls: Any, json_dict: Dict[Any, Any]) -> KeystoreCrypto: ...
    def __init__(self, kdf: Any, checksum: Any, cipher: Any) -> None: ...

class Keystore(BytesDataclass):
    crypto: KeystoreCrypto = ...
    description: str = ...
    pubkey: str = ...
    path: str = ...
    uuid: str = ...
    version: int = ...
    def kdf(self, **kwargs: Any) -> bytes: ...
    def save(self, file: str) -> None: ...
    @classmethod
    def from_json(cls: Any, json_dict: Dict[Any, Any]) -> Keystore: ...
    @classmethod
    def from_file(cls: Any, path: str) -> Keystore: ...
    @classmethod
    def encrypt(cls: Any, secret: bytes, password: str, *, path: str=..., kdf_salt: bytes=..., aes_iv: bytes=...) -> Keystore: ...
    def decrypt(self, password: str) -> bytes: ...
    def __init__(self, crypto: Any, description: Any, pubkey: Any, path: Any, uuid: Any, version: Any) -> None: ...

class Pbkdf2Keystore(Keystore):
    crypto: KeystoreCrypto = ...
    def __init__(self, crypto: Any, description: Any, pubkey: Any, path: Any, uuid: Any, version: Any) -> None: ...

class ScryptKeystore(Keystore):
    crypto: KeystoreCrypto = ...
    def __init__(self, crypto: Any, description: Any, pubkey: Any, path: Any, uuid: Any, version: Any) -> None: ...
